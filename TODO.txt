TODO
======

high
    [x]整数閉区間を示すクラスを作る
        [x]クラスは下端点と上端点を持っている

middle
    [x]整数閉区間の文字列表記を返せる（例: 下端点 3, 上端点 7 の整数閉区間の文字列表記は "[3,7]"）
        - [x]下端点3、上端点7を渡した場合、文字列[3,7]が帰ってくる

low
    [x]整数閉区間が整数を含むかどうかを判定する
        - [x]整数が上端点の場合、整数が含まれていることを判定する
            - [x]上端点が7のとき整数7を渡すとtrueが帰ってくることを判定する
        - [x]整数が上端点より上の場合、整数が含まれていないことを判定する
            - [x]上端点が7のとき整数8を渡すとfalseが帰ってくることを判定する
        - [x]整数が下端点の場合、整数が含まれていることを判定する
            - [x]下端点が3のとき整数3を渡すとtrueが帰ってくることを判定する
        - [x]整数が下端点より下の場合、整数が含まれていないことを判定する
            - [x]下端点が3のとき整数2を渡すとfalseが帰ってくることを判定する
    [x]下端が上端より大きい場合は例外を発生させる
        - [x] 下端点3上端点2で作成した場合例外が発生する
        - [x] 下端点3上端点3で作成した場合例外は発生しない

なお、先に作成した閉区間クラスとのコードの重複がなるべく発生しないようにしたい。
high
    []整数開区間を示すクラスを作る
        []クラスは下端点と上端点を持っている
middle
    []整数開区間の文字列表記を返せる（例: 下端点 3, 上端点 7 の整数甲開区間の文字列表記は "[3,7]"）
        - []下端点3、上端点7を渡した場合、文字列[3,7]が帰ってくる
low
    []整数開区間が整数を含むかどうかを判定する
        - []整数が上端点の場合、整数が含まれていることを判定する
            - []上端点が7のとき整数7を渡すとtrueが帰ってくることを判定する
        - []整数が上端点より上の場合、整数が含まれていないことを判定する
            - []上端点が7のとき整数8を渡すとfalseが帰ってくることを判定する
        - []整数が下端点の場合、整数が含まれていることを判定する
            - []下端点が3のとき整数3を渡すとtrueが帰ってくることを判定する
        - []整数が下端点より下の場合、整数が含まれていないことを判定する
            - []下端点が3のとき整数2を渡すとfalseが帰ってくることを判定する
    []別の開区間と等価かどうかや、完全に含まれるかどうかも判定できる。
        - []別の開区間と比較して、等価かどうか判定する
        - []別の開区間に包括されているかどうかを判定する
    []下端が上端より大きい場合は例外を発生させる
        - []下端点3上端点2で作成した場合例外が発生する
        - []下端点3上端点3で作成した場合例外は発生しない